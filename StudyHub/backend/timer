from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel

app = FastAPI()

# Enable CORS so the frontend can talk to backend
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # change to your frontend URL in production
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Simulated timer state (in-memory)
class TimerState(BaseModel):
    seconds: int
    running: bool

timer_state = TimerState(seconds=0, running=False)

@app.get("/api/status", response_model=TimerState)
def get_status():
    return timer_state

@app.post("/api/start")
def start_timer():
    timer_state.running = True
    return timer_state

@app.post("/api/pause")
def pause_timer():
    timer_state.running = False
    return timer_state

@app.post("/api/restart")
def restart_timer():
    timer_state.seconds = 0
    timer_state.running = False
    return timer_state

@app.post("/api/tick")
def tick():
    if timer_state.running:
        timer_state.seconds += 1
    return timer_state
